{"version":3,"sources":["templates/hexapodParams.js","templates/plotParams.js","components/vars.js","components/Nav.js","templates/plotter.js","components/HexapodPlot.js","components/generic/NumberInputField.js","components/generic/SmallWidgets.js","components/DimensionsWidget.js","components/generic/Slider.js","components/pagePartials/LegPoseWidgets.js","components/pages/ForwardKinematicsPage.js","components/pagePartials/PoseTable.js","components/pages/InverseKinematicsPage.js","components/pagePartials/RandomRobotGif.js","components/pages/LandingPage.js","components/pages/LegPatternPage.js","components/pages/WalkingGaitsPage.js","AppHelpers.js","_TRANSFORM.js","_HOOK.js","App.js","_VAR_CONFIG.js"],"names":["DEFAULT_DIMENSIONS","front","side","middle","coxia","femur","tibia","DEFAULT_POSE","leftFront","alpha","beta","gamma","rightFront","leftMiddle","rightMiddle","leftBack","rightBack","DEFAULT_PATTERN_PARAMS","DEFAULT_IK_PARAMS","tx","ty","tz","rx","ry","rz","hipStance","legStance","DEFAULT_GAIT_PARAMS","hipSwing","liftSwing","stepCount","DATA","name","showlegend","type","opacity","color","x","y","z","line","width","marker","size","mode","CAMERA_VIEW","center","eye","up","SCENE","xaxis","nticks","range","zerolinecolor","showbackground","yaxis","zaxis","backgroundcolor","aspectmode","aspectratio","camera","LAYOUT","scene","margin","b","l","r","t","paper_bgcolor","autosize","SECTION_NAMES","PATH_NAMES","ANGLE_NAMES","DIMENSION_NAMES","LEG_NAMES","IK_SLIDERS_LABELS","GAIT_SLIDER_LABELS","rangeParams","absVal","minVal","maxVal","stepVal","RANGES","30","45","60","90","180","translateInputs","RANGE_PARAMS","dimensionInputs","Infinity","GAIT_RANGE_PARAMS","defaultVal","ICON_COMPONENTS","mug","className","circle","octocat","times","home","PATHS","inverseKinematics","path","description","icon","forwardKinematics","legPatterns","landingPage","walkingGaits","PATH_LINKS","URL_LINKS","url","BulletPageLink","link","showDesc","to","BulletUrlLink","href","target","rel","children","NavBullets","id","map","key","NavDetailed","Nav","getNewPlotParams","hexapod","cameraView","data","polygonVertices","body","closedPointsList","bodyX","point","bodyY","bodyZ","head","cog","cogProjection","legs","groundContactPoints","dBodyMesh","dBodyOutline","dHead","dCog","dCogProjection","dLegs","leg","index","allPointsList","dSupportPolygon","axisScale","dimensions","localAxes","xAxis","yAxis","zAxis","hXaxis","hYaxis","hZaxis","wXaxis","wYaxis","wZaxis","_drawHexapod","undefined","includes","Object","values","reduce","sum","dimension","newRange","HexapodPlot","defaults","state","ready","Plot","logCameraView","relayoutData","then","Plotly","createPlotlyComponent","setState","this","props","layout","onRelayout","revision","config","displaylogo","responsive","style","height","useResizeHandler","React","Component","InputField","message","myRef","createRef","value","validity","current","badInput","rangeOverflow","rangeUnderflow","stepMismatch","checkValidity","numberValue","parseFloat","isNaN","handleChange","newId","input","ref","min","max","step","htmlFor","onChange","e","AlertBox","info","subject","ToggleSwitch","showValue","Card","title","other","BasicButton","handleClick","onClick","ResetButton","reset","DimensionsWidget","sectionName","isFine","onUpdate","toggleMode","updateFieldState","updateDimensions","params","render","toggleSwitch","NumberInputFields","numberInputFields","NumberInputField","Slider","sliderList","names","LegPoseWidget","angle","Number","fields","pose","renderStacked","WidgetType","ForwardKinematicsPage","pageName","componentDidMount","onMount","updatePose","newPose","legPoseWidget","POSITION_ALIAS","PoseTable","rm","rf","lf","lm","lb","rb","label","TableRow","poseTable","POSITION_NAMES_LIST","formattedPose","position","alias","toFixed","formatPose","InverseKinematicsPage","ikParams","errorMessage","result","solveInverseKinematics","updateHexapodPlot","updateIkParams","obtainedSolution","sliders","slice","additionalInfo","MinimumRandomRobotGif","lazy","RandomRobotGif","fallback","LandingPage","LegPatternPage","patternParams","updatePatternPose","getPose","sequences","i","keys","newSequences","legPosition","newSwitch","switches","switch1","switch2","switch3","paddingBottom","countSteps","sequence","length","WalkingGaitsPage","currentTwist","walkSequence","gaitParams","isAnimating","isTripodGait","isForward","inWalkMode","showGaitWidgets","animationCount","setWalkSequence","componentWillUnmount","clearInterval","intervalID","animate","tempStep","Math","deltaTwist","twist","VirtualHexapod","wontRotate","matrix","tRotZmatrix","cloneTrot","gaitType","walkMode","getWalkSequence","updateGaitParams","toggleWalkMode","toggleGaitType","toggleWidgets","toggleDirection","toggleAnimating","setInterval","hidden","animationControlSwitches","animatingSwitch","widgetsSwitch","gaitControlSwitches","gaitTypeSwitch","directionSwitch","rotateSwitch","Page","pageComponent","exact","updateHexapod","updateType","newParam","oldHexapod","foundSolution","LEG_POSITIONS","LEFT_LEGS","clean","shouldInvert","directed","round","transformPose","isLeft","useSendPose","socketRef","useRef","useState","Date","lastDate","setLastDate","deltaDate","setDeltaDate","useEffect","socketIOClient","SOCKET_SERVER_URL","disconnect","useCallback","currentDate","newDeltaDate","MINIMUM_TIME_BETWEEN_MESSAGES","console","log","emit","CHANNEL_NAME","sender","CLIENT_SENDER_NAME","time","getTime","App","setPageName","setHexapod","setRevision","inHexapodPage","sendPose","manageState","h","document","newPageName","module","exports","SOCKET_CLIENT_URLS","SOCKET_SERVER_PORT"],"mappings":"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","file":"static/js/4.cf296340.chunk.js","sourcesContent":["// Previously all 100\nconst DEFAULT_DIMENSIONS = {\n    front: 400,\n    side: 750,\n    middle: 650,\n    coxia: 300,\n    femur: 850,\n    tibia: 1200,\n}\n\nconst DEFAULT_BODY_DIMENSIONS = {\n    front: DEFAULT_DIMENSIONS.front,\n    side: DEFAULT_DIMENSIONS.side,\n    middle: DEFAULT_DIMENSIONS.middle,\n}\nconst DEFAULT_LEG_DIMENSIONS = {\n    coxia: DEFAULT_DIMENSIONS.coxia,\n    femur: DEFAULT_DIMENSIONS.femur,\n    tibia: DEFAULT_DIMENSIONS.tibia,\n}\n\nconst DEFAULT_POSE = {\n    leftFront: { alpha: 0, beta: 0, gamma: 0 },\n    rightFront: { alpha: 0, beta: 0, gamma: 0 },\n    leftMiddle: { alpha: 0, beta: 0, gamma: 0 },\n    rightMiddle: { alpha: 0, beta: 0, gamma: 0 },\n    leftBack: { alpha: 0, beta: 0, gamma: 0 },\n    rightBack: { alpha: 0, beta: 0, gamma: 0 },\n}\n\nconst DEFAULT_PATTERN_PARAMS = { alpha: 0, beta: 0, gamma: 0 }\n\nconst DEFAULT_IK_PARAMS = {\n    tx: 0,\n    ty: 0,\n    tz: 0,\n    rx: 0,\n    ry: 0,\n    rz: 0,\n    hipStance: 0,\n    legStance: 0,\n}\n\nconst DEFAULT_GAIT_PARAMS = {\n    tx: 0,\n    tz: 0,\n    rx: 0,\n    ry: 0,\n    legStance: 0,\n    hipStance: 20,\n    hipSwing: 25,\n    liftSwing: 40,\n    stepCount: 5,\n}\n\nexport {\n    DEFAULT_DIMENSIONS,\n    DEFAULT_LEG_DIMENSIONS,\n    DEFAULT_BODY_DIMENSIONS,\n    DEFAULT_POSE,\n    DEFAULT_IK_PARAMS,\n    DEFAULT_PATTERN_PARAMS,\n    DEFAULT_GAIT_PARAMS,\n}\n","const BODY_MESH_COLOR = \"#ff6348\"\nconst BODY_COLOR = \"#FC427B\"\nconst COG_COLOR = \"#32ff7e\"\nconst LEG_COLOR = \"#EE5A24\"\nconst SUPPORT_POLYGON_MESH_COLOR = \"#3c6382\"\nconst AXIS_ZERO_LINE_COLOR = \"#079992\"\nconst PAPER_BG_COLOR = \"rgb(23, 33, 43)\"\nconst GROUND_COLOR = \"rgb(14, 40, 69)\"\n\nconst BODY_MESH_OPACITY = 0.3\nconst BODY_OUTLINE_WIDTH = 12\nconst COG_SIZE = 14\nconst HEAD_SIZE = 14\nconst LEG_OUTLINE_WIDTH = 10\nconst SUPPORT_POLYGON_MESH_OPACITY = 0.2\n\nconst DATA_INDEX_MAP = {\n    bodyMesh: 0,\n    bodyOutline: 1,\n    head: 2,\n    centerOfGravity: 3,\n    centerOfGravityProjection: 4,\n    rightMiddleLeg: 5,\n    rightFrontLeg: 6,\n    leftFrontLeg: 7,\n    leftMiddleLeg: 8,\n    leftBackLeg: 9,\n    rightBackLeg: 10,\n    supportPolygonMesh: 11,\n    hexapodXaxis: 12,\n    hexapodYaxis: 13,\n    hexapodZaxis: 14,\n    worldXaxis: 15,\n    worldYaxis: 16,\n    worldZaxis: 17,\n}\n\nconst DATA = [\n    {\n        name: \"bodyMesh\",\n        showlegend: true,\n        type: \"mesh3d\",\n        opacity: BODY_MESH_OPACITY,\n        color: BODY_MESH_COLOR,\n        x: [100.0, 100.0, -100.0, -100.0, -100.0, 100.0, 100.0],\n        y: [0.0, 100.0, 100.0, 0.0, -100.0, -100.0, 0.0],\n        z: [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0],\n    },\n    {\n        line: { color: BODY_COLOR, opacity: 1.0, width: BODY_OUTLINE_WIDTH },\n        name: \"bodyOutline\",\n        showlegend: true,\n        type: \"scatter3d\",\n        x: [100.0, 100.0, -100.0, -100.0, -100.0, 100.0, 100.0],\n        y: [0.0, 100.0, 100.0, 0.0, -100.0, -100.0, 0.0],\n        z: [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0],\n    },\n    {\n        marker: { color: BODY_COLOR, opacity: 1.0, size: HEAD_SIZE },\n        mode: \"markers\",\n        name: \"head\",\n        type: \"scatter3d\",\n        x: [0.0],\n        y: [100.0],\n        z: [100.0],\n    },\n    {\n        marker: { color: COG_COLOR, opacity: 1, size: COG_SIZE },\n        mode: \"markers\",\n        name: \"centerOfGravity\",\n        type: \"scatter3d\",\n        x: [0.0],\n        y: [0.0],\n        z: [100.0],\n    },\n    {\n        marker: { color: COG_COLOR, opacity: 0.5, size: 0.5 * COG_SIZE },\n        mode: \"markers\",\n        name: \"centerOfGravityProjection\",\n        type: \"scatter3d\",\n        x: [0.0],\n        y: [0.0],\n        z: [0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"rightMiddleLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [100.0, 200.0, 300.0, 300.0],\n        y: [0.0, 0.0, 0.0, 0.0],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"rightFrontLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [100.0, 170.71067811865476, 241.4213562373095, 241.4213562373095],\n        y: [100.0, 170.71067811865476, 241.42135623730948, 241.42135623730948],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"leftFrontLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [-100.0, -170.71067811865476, -241.42135623730948, -241.42135623730948],\n        y: [100.0, 170.71067811865476, 241.4213562373095, 241.4213562373095],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"leftMiddleLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [-100.0, -200.0, -300.0, -300.0],\n        y: [0.0, 1.2246467991473532e-14, 2.4492935982947064e-14, 2.4492935982947064e-14],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"leftBackLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [-100.0, -170.71067811865476, -241.42135623730954, -241.42135623730954],\n        y: [-100.0, -170.71067811865476, -241.42135623730948, -241.42135623730948],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        line: { color: LEG_COLOR, width: LEG_OUTLINE_WIDTH },\n        name: \"rightBackLeg\",\n        showlegend: false,\n        type: \"scatter3d\",\n        x: [100.0, 170.71067811865476, 241.42135623730948, 241.42135623730948],\n        y: [-100.0, -170.71067811865476, -241.42135623730954, -241.42135623730954],\n        z: [100.0, 100.0, 100.0, 0.0],\n    },\n    {\n        name: \"supportPolygonMesh\",\n        showlegend: false,\n        type: \"mesh3d\",\n        opacity: SUPPORT_POLYGON_MESH_OPACITY,\n        color: SUPPORT_POLYGON_MESH_COLOR,\n        x: [\n            300.0,\n            241.4213562373095,\n            -241.42135623730948,\n            -300.0,\n            -241.42135623730954,\n            241.42135623730948,\n        ],\n        y: [\n            0.0,\n            241.42135623730948,\n            241.4213562373095,\n            2.4492935982947064e-14,\n            -241.42135623730948,\n            -241.42135623730954,\n        ],\n        z: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n    },\n    {\n        line: { color: \"#2f3640\", width: 2 },\n        name: \"hexapodXaxis\",\n        mode: \"lines\",\n        showlegend: false,\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0.0, 50.0],\n        y: [0.0, 0.0],\n        z: [100.0, 100.0],\n    },\n    {\n        line: { color: \"#e67e22\", width: 2 },\n        name: \"hexapodYaxis\",\n        mode: \"lines\",\n        showlegend: false,\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0.0, 0.0],\n        y: [0.0, 50.0],\n        z: [100.0, 100.0],\n    },\n    {\n        line: { color: \"#0097e6\", width: 2 },\n        name: \"hexapodZaxis\",\n        mode: \"lines\",\n        showlegend: false,\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0.0, 0.0],\n        y: [0.0, 0.0],\n        z: [100.0, 150.0],\n    },\n    {\n        line: { color: \"#2f3640\", width: 2 },\n        name: \"worldXaxis\",\n        showlegend: false,\n        mode: \"lines\",\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0, 50],\n        y: [0, 0],\n        z: [0, 0],\n    },\n    {\n        line: { color: \"#e67e22\", width: 2 },\n        name: \"worldYaxis\",\n        showlegend: false,\n        mode: \"lines\",\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0, 0],\n        y: [0, 50],\n        z: [0, 0],\n    },\n    {\n        line: { color: \"#0097e6\", width: 2 },\n        name: \"worldZaxis\",\n        showlegend: false,\n        mode: \"lines\",\n        opacity: 1.0,\n        type: \"scatter3d\",\n        x: [0, 0],\n        y: [0, 0],\n        z: [0, 50],\n    },\n]\n\nconst CAMERA_VIEW = {\n    center: {\n        x: 0.0005967195135552272,\n        y: 0.11455181630825005,\n        z: -0.44957387699746415,\n    },\n    eye: {\n        x: 0.010119765679525836,\n        y: 0.573601223004958,\n        z: 0.04247372257492105,\n    },\n    up: {\n        x: 0.006592638138864914,\n        y: 0.00003338632363222382,\n        z: 0.9999782677677168,\n    },\n}\n\nconst SCENE = {\n    xaxis: {\n        nticks: 1,\n        range: [-600, 600],\n        zerolinecolor: AXIS_ZERO_LINE_COLOR,\n        showbackground: false,\n    },\n    yaxis: {\n        nticks: 1,\n        range: [-600, 600],\n        zerolinecolor: AXIS_ZERO_LINE_COLOR,\n        showbackground: false,\n    },\n    zaxis: {\n        nticks: 1,\n        range: [-10, 590],\n        zerolinecolor: AXIS_ZERO_LINE_COLOR,\n        showbackground: true,\n        backgroundcolor: GROUND_COLOR,\n    },\n    aspectmode: \"manual\",\n    aspectratio: { x: 1, y: 1, z: 1 },\n    camera: CAMERA_VIEW,\n}\n\nconst LAYOUT = {\n    scene: SCENE,\n    margin: { b: 20, l: 10, r: 10, t: 20 },\n    paper_bgcolor: PAPER_BG_COLOR,\n    showlegend: false,\n    autosize: true,\n}\n\nexport { DATA, LAYOUT, DATA_INDEX_MAP, SCENE, CAMERA_VIEW }\n","import React from \"react\"\nimport { GiCoffeeMug } from \"react-icons/gi\"\nimport { FaGithubAlt, FaTimes, FaHome } from \"react-icons/fa\"\nimport { GrStatusGoodSmall } from \"react-icons/gr\"\n\nconst SECTION_NAMES = {\n    dimensions: \"Dimensions\",\n    inverseKinematics: \"Inverse Kinematics\",\n    forwardKinematics: \"Forward Kinematics\",\n    legPatterns: \"Leg Patterns\",\n    landingPage: \"Root\",\n    walkingGaits: \"Walking Gaits\",\n}\n\nconst PATH_NAMES = {\n    inverseKinematics: \"/inverse-kinematics\",\n    forwardKinematics: \"/forward-kinematics\",\n    legPatterns: \"/leg-patterns\",\n    landingPage: \"/\",\n    walkingGaits: \"/walking-gaits\",\n}\n\nconst ANGLE_NAMES = [\"alpha\", \"beta\", \"gamma\"]\nconst DIMENSION_NAMES = [\"front\", \"side\", \"middle\", \"coxia\", \"femur\", \"tibia\"]\nconst LEG_NAMES = [\n    \"leftFront\",\n    \"rightFront\",\n    \"leftMiddle\",\n    \"rightMiddle\",\n    \"leftBack\",\n    \"rightBack\",\n]\n\nconst IK_SLIDERS_LABELS = [\"tx\", \"ty\", \"tz\", \"rx\", \"ry\", \"rz\", \"hipStance\", \"legStance\"]\nconst RESET_LABEL = \"reset\"\n\nconst GAIT_SLIDER_LABELS = [\n    \"hipSwing\",\n    \"liftSwing\",\n    \"legStance\",\n    \"hipStance\",\n    \"tx\",\n    \"tz\",\n    \"rx\",\n    \"ry\",\n    \"stepCount\",\n]\n\n/*************\n * RANGE PARAMS\n *************/\n\nconst rangeParams = absVal => ({ minVal: -absVal, maxVal: absVal, stepVal: 1 })\nconst RANGES = {\n    30: rangeParams(30),\n    45: rangeParams(45),\n    60: rangeParams(60),\n    90: rangeParams(90),\n    180: rangeParams(180),\n}\n\nconst translateInputs = { minVal: -1, maxVal: 1, stepVal: 0.1 }\n\nconst RANGE_PARAMS = {\n    dimensionInputs: { minVal: 0, maxVal: Infinity, stepVal: 1 },\n    tx: translateInputs,\n    ty: translateInputs,\n    tz: translateInputs,\n    rx: RANGES[30],\n    ry: RANGES[30],\n    rz: RANGES[60],\n    legStance: RANGES[90],\n    hipStance: RANGES[60],\n    alpha: RANGES[30],\n    beta: RANGES[90],\n    gamma: RANGES[90],\n}\n\nconst GAIT_RANGE_PARAMS = {\n    tx: { minVal: -0.25, maxVal: 0.25, stepVal: 0.1, defaultVal: 0 },\n    tz: { minVal: -0.5, maxVal: 0.5, stepVal: 0.1, defaultVal: 0 },\n    rx: { minVal: -15, maxVal: 15, stepVal: 2.5, defaultVal: 0 },\n    ry: { minVal: -15, maxVal: 15, stepVal: 2.5, defaultVal: 0 },\n    legStance: { minVal: -50, maxVal: 50, stepVal: 1, defaultVal: 0 },\n    hipStance: { minVal: 0, maxVal: 40, stepVal: 1, defaultVal: 20 },\n    hipSwing: { minVal: 10, maxVal: 40, stepVal: 1, defaultVal: 25 },\n    liftSwing: { minVal: 10, maxVal: 70, stepVal: 1, defaultVal: 40 },\n    stepCount: { minVal: 3, maxVal: 7, stepVal: 1, defaultVal: 5 },\n}\n/*************\n * ICONS\n *************/\n\nconst ICON_COMPONENTS = {\n    mug: <GiCoffeeMug className=\"vertical-align\" />,\n    circle: <GrStatusGoodSmall className=\"small-icon\" />,\n    octocat: <FaGithubAlt className=\"vertical-align\" />,\n    times: <FaTimes className=\"vertical-align\" />,\n    home: <FaHome className=\"vertical-align\" />,\n}\n\n/*************\n * NAVIGATION\n *************/\n\nconst PATHS = {\n    inverseKinematics: {\n        path: PATH_NAMES.inverseKinematics,\n        description: SECTION_NAMES.inverseKinematics,\n        icon: ICON_COMPONENTS.circle,\n    },\n    forwardKinematics: {\n        path: PATH_NAMES.forwardKinematics,\n        description: SECTION_NAMES.forwardKinematics,\n        icon: ICON_COMPONENTS.circle,\n    },\n    legPatterns: {\n        path: PATH_NAMES.legPatterns,\n        description: SECTION_NAMES.legPatterns,\n        icon: ICON_COMPONENTS.circle,\n    },\n    landingPage: {\n        path: PATH_NAMES.landingPage,\n        description: SECTION_NAMES.landingPage,\n        icon: ICON_COMPONENTS.home,\n    },\n\n    walkingGaits: {\n        path: PATH_NAMES.walkingGaits,\n        description: SECTION_NAMES.walkingGaits,\n        icon: ICON_COMPONENTS.circle,\n    },\n}\n\nconst KOFI_LINK_PROPERTIES = {\n    name: \"KOFI\",\n    icon: ICON_COMPONENTS.mug,\n    description: \"Buy Mithi Ko-Fi 🍵\",\n    url: \"https://ko-fi.com/minimithi\",\n}\n\nconst REPO_LINK_PROPERTIES = {\n    name: \"REPO\",\n    icon: ICON_COMPONENTS.octocat,\n    description: \"Source Code\",\n    url: \"https://github.com/mithi/hexapod-irl\",\n}\n\nconst PATH_LINKS = [\n    PATHS.inverseKinematics,\n    PATHS.forwardKinematics,\n    PATHS.legPatterns,\n    PATHS.walkingGaits,\n    PATHS.landingPage,\n]\n\nconst URL_LINKS = [KOFI_LINK_PROPERTIES, REPO_LINK_PROPERTIES]\n\n/*************\n * LANDING PAGE\n *************/\n\nconst LANDING_PAGE_MESSAGE = `\n\n# Mithi's Bare Minimum Hexapod Robot Simulator\n\nEnjoy your stay and share with your friends!\n`\n\nexport {\n    ICON_COMPONENTS,\n    LANDING_PAGE_MESSAGE,\n    SECTION_NAMES,\n    ANGLE_NAMES,\n    DIMENSION_NAMES,\n    LEG_NAMES,\n    IK_SLIDERS_LABELS,\n    GAIT_SLIDER_LABELS,\n    RESET_LABEL,\n    PATHS,\n    URL_LINKS,\n    PATH_LINKS,\n    RANGE_PARAMS,\n    GAIT_RANGE_PARAMS,\n}\n","import React from \"react\"\nimport { URL_LINKS, PATH_LINKS } from \"./vars\"\nimport { Link } from \"react-router-dom\"\n\nconst NAV_BULLETS_PREFIX = \"navBullet\"\nconst NAV_DETAILED_PREFIX = \"navDetailed\"\n\nconst BulletPageLink = ({ link, showDesc }) => (\n    <li>\n        <Link to={link.path} className=\"link-icon\">\n            <span>\n                {link.icon} {showDesc ? link.description : null}\n            </span>\n        </Link>\n    </li>\n)\n\nconst BulletUrlLink = ({ path, description, icon }) => (\n    <li>\n        <a\n            href={path}\n            className=\"link-icon\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            children={\n                <span>\n                    {icon} {description}\n                </span>\n            }\n        />\n    </li>\n)\n\nconst NavBullets = () => (\n    <ul id=\"top-bar\">\n        {URL_LINKS.map(link => (\n            <BulletUrlLink\n                path={link.url}\n                key={NAV_BULLETS_PREFIX + link.url}\n                icon={link.icon}\n            />\n        ))}\n\n        {PATH_LINKS.map(link => (\n            <BulletPageLink key={NAV_BULLETS_PREFIX + link.path} link={link} />\n        ))}\n    </ul>\n)\n\nconst NavDetailed = () => (\n    <footer>\n        <nav id=\"nav\">\n            <ul className=\"grid-cols-1 no-bullet\">\n                {URL_LINKS.map(link => (\n                    <BulletUrlLink\n                        path={link.url}\n                        key={NAV_DETAILED_PREFIX + link.url}\n                        icon={link.icon}\n                        description={link.description}\n                    />\n                ))}\n\n                {PATH_LINKS.map(link => (\n                    <BulletPageLink\n                        key={NAV_DETAILED_PREFIX + link.path}\n                        link={link}\n                        showDesc={true}\n                    />\n                ))}\n            </ul>\n        </nav>\n    </footer>\n)\n\nconst Nav = () => <NavBullets />\n\nexport { Nav, NavDetailed }\n","import { DATA, SCENE, LAYOUT, CAMERA_VIEW } from \"./\"\n\nconst _getSumOfDimensions = dimensions =>\n    Object.values(dimensions).reduce((sum, dimension) => sum + dimension, 0)\n\nconst _drawHexapod = hexapod => {\n    const polygonVertices = hexapod.body.closedPointsList\n    const bodyX = polygonVertices.map(point => point.x)\n    const bodyY = polygonVertices.map(point => point.y)\n    const bodyZ = polygonVertices.map(point => point.z)\n    const { head, cog } = hexapod.body\n    const { cogProjection, legs, groundContactPoints } = hexapod\n\n    const dBodyMesh = {\n        ...DATA[0],\n        x: bodyX,\n        y: bodyY,\n        z: bodyZ,\n    }\n\n    const dBodyOutline = {\n        ...DATA[1],\n        x: bodyX,\n        y: bodyY,\n        z: bodyZ,\n    }\n\n    const dHead = {\n        ...DATA[2],\n        x: [head.x],\n        y: [head.y],\n        z: [head.z],\n    }\n\n    const dCog = {\n        ...DATA[3],\n        x: [cog.x],\n        y: [cog.y],\n        z: [cog.z],\n    }\n\n    const dCogProjection = {\n        ...DATA[4],\n        x: [cogProjection.x],\n        y: [cogProjection.y],\n        z: [cogProjection.z],\n    }\n\n    const dLegs = legs.map((leg, index) => ({\n        ...DATA[index + 5],\n        x: leg.allPointsList.map(point => point.x),\n        y: leg.allPointsList.map(point => point.y),\n        z: leg.allPointsList.map(point => point.z),\n    }))\n\n    const dSupportPolygon = {\n        ...DATA[11],\n        x: groundContactPoints.map(point => point.x),\n        y: groundContactPoints.map(point => point.y),\n        z: groundContactPoints.map(point => point.z),\n    }\n\n    const axisScale = hexapod.body.dimensions.front / 2\n    const { xAxis, yAxis, zAxis } = hexapod.localAxes\n    const hXaxis = {\n        ...DATA[12],\n        x: [cog.x, cog.x + axisScale * xAxis.x],\n        y: [cog.y, cog.y + axisScale * xAxis.y],\n        z: [cog.z, cog.z + axisScale * xAxis.z],\n    }\n\n    const hYaxis = {\n        ...DATA[13],\n        x: [cog.x, cog.x + axisScale * yAxis.x],\n        y: [cog.y, cog.y + axisScale * yAxis.y],\n        z: [cog.z, cog.z + axisScale * yAxis.z],\n    }\n\n    const hZaxis = {\n        ...DATA[14],\n        x: [cog.x, cog.x + axisScale * zAxis.x],\n        y: [cog.y, cog.y + axisScale * zAxis.y],\n        z: [cog.z, cog.z + axisScale * zAxis.z],\n    }\n\n    const wXaxis = {\n        ...DATA[15],\n        x: [0, axisScale],\n    }\n\n    const wYaxis = {\n        ...DATA[16],\n        y: [0, axisScale],\n    }\n\n    const wZaxis = {\n        ...DATA[17],\n        z: [0, axisScale],\n    }\n\n    return [\n        dBodyMesh,\n        dBodyOutline,\n        dHead,\n        dCog,\n        dCogProjection,\n        ...dLegs,\n        dSupportPolygon,\n        hXaxis,\n        hYaxis,\n        hZaxis,\n        wXaxis,\n        wYaxis,\n        wZaxis,\n    ]\n}\n\nconst getNewPlotParams = (hexapod, cameraView) => {\n    const data = _drawHexapod(hexapod)\n    if ([null, undefined, {}].includes(cameraView)) {\n        cameraView = CAMERA_VIEW\n    }\n    const range = _getSumOfDimensions(hexapod.dimensions)\n    const newRange = [-range, range]\n    const xaxis = { ...SCENE.xaxis, range: newRange }\n    const yaxis = { ...SCENE.yaxis, range: newRange }\n    const zaxis = { ...SCENE.zaxis, range: [-10, 2 * range - 10] }\n    const scene = {\n        ...SCENE,\n        xaxis,\n        yaxis,\n        zaxis,\n        camera: cameraView,\n    }\n\n    const layout = { ...LAYOUT, scene }\n\n    return [data, layout]\n}\n\nexport default getNewPlotParams\n","import React from \"react\"\nimport createPlotlyComponent from \"react-plotly.js/factory\"\nimport * as defaults from \"../templates\"\nimport getNewPlotParams from \"../templates/plotter\"\n\nclass HexapodPlot extends React.Component {\n    cameraView = defaults.CAMERA_VIEW\n    state = { ready: false }\n    Plot = null\n\n    logCameraView = relayoutData => {\n        this.cameraView = relayoutData[\"scene.camera\"]\n    }\n\n    componentDidMount() {\n        import(\"plotly.js-gl3d-dist-min\").then(Plotly => {\n            this.Plot = createPlotlyComponent(Plotly)\n            this.setState({ ready: true })\n        })\n    }\n\n    render() {\n        if (!this.state.ready) {\n            return <p>Loading your cute robot...</p>\n        }\n\n        if (!this.props.hexapod) {\n            return null\n        }\n        const [data, layout] = getNewPlotParams(this.props.hexapod, this.cameraView)\n\n        const props = {\n            data,\n            layout,\n            onRelayout: this.logCameraView,\n            revision: this.props.revision,\n            config: { displaylogo: false, responsive: true },\n            style: { height: \"100%\", width: \"100%\" },\n            useResizeHandler: true,\n        }\n\n        const Plot = this.Plot\n        return <Plot {...props} />\n    }\n}\n\nexport default HexapodPlot\n","import React, { Component } from \"react\"\n\nclass InputField extends Component {\n    state = { message: null }\n\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef()\n    }\n\n    componentDidMount() {\n        this.setState({ message: null })\n    }\n\n    handleChange(value) {\n        const { minVal, maxVal, stepVal } = this.props.rangeParams\n        const validity = this.myRef.current.validity\n\n        if (validity.badInput) {\n            this.setState({ message: \"NaN\" })\n            return\n        }\n\n        if (validity.rangeOverflow) {\n            this.setState({ message: `max=${maxVal}` })\n            return\n        }\n\n        if (validity.rangeUnderflow) {\n            this.setState({ message: `min=${minVal}` })\n            return\n        }\n\n        if (validity.stepMismatch) {\n            this.setState({ message: `step=${stepVal}` })\n            return\n        }\n\n        if (!this.myRef.current.checkValidity()) {\n            this.setState({ message: \"Error\" })\n            return\n        }\n\n        const numberValue = parseFloat(value)\n\n        if (isNaN(numberValue)) {\n            this.setState({ message: \"NaN\" })\n            return\n        }\n\n        this.setState({ message: null })\n        this.props.handleChange(this.props.name, numberValue)\n    }\n\n    render() {\n        const { name, rangeParams, id, value } = this.props\n        const newId = id || name\n        const { minVal, maxVal, stepVal } = rangeParams\n        const props = {\n            type: \"number\",\n            input: \"numeric\",\n            id: newId,\n            ref: this.myRef,\n            value,\n            min: minVal,\n            max: maxVal,\n            step: stepVal,\n            style: { margin: 0 },\n        }\n\n        return (\n            <div>\n                <label htmlFor={newId} className=\"label\">\n                    {name}\n                </label>\n                <input {...props} onChange={e => this.handleChange(e.target.value)} />\n                <label className=\"label red\" style={{ opacity: 1 }}>\n                    {this.state.message}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport default InputField\n","import React from \"react\"\nimport { ICON_COMPONENTS, RESET_LABEL } from \"../vars\"\n\nconst AlertBox = ({ info }) => (\n    <div className=\"message\">\n        <h2 className=\"red\">\n            {ICON_COMPONENTS.times} {info.subject}\n        </h2>\n        <p>{info.body}</p>\n    </div>\n)\n\nconst ToggleSwitch = ({ id, value, handleChange, showValue }) => (\n    <div className=\"switch-container\">\n        <label className=\"switch\">\n            <input id={id} type=\"checkbox\" value={value} onChange={handleChange} />\n            <span className=\"toggle-switch-widget round\"></span>\n            <span style={{ opacity: 0 }}>{value}</span>\n        </label>\n        <label className=\"label\">{showValue ? value : null}</label>\n    </div>\n)\n\nconst Card = ({ title, other, children }) => (\n    <div>\n        <div className=\"card-header\">\n            {title}\n            {other}\n        </div>\n        {children}\n    </div>\n)\n\nconst BasicButton = ({ handleClick, children }) => (\n    <button type=\"button\" className=\"button\" onClick={handleClick}>\n        {children}\n    </button>\n)\n\nconst ResetButton = ({ reset }) => (\n    <BasicButton handleClick={reset}>{RESET_LABEL}</BasicButton>\n)\n\nexport { AlertBox, Card, ToggleSwitch, BasicButton, ResetButton }\n","import React, { Component } from \"react\"\nimport NumberInputField from \"./generic/NumberInputField\"\nimport { Card, ResetButton, ToggleSwitch } from \"./generic/SmallWidgets\"\nimport { DEFAULT_DIMENSIONS } from \"../templates\"\nimport { SECTION_NAMES, DIMENSION_NAMES, RANGE_PARAMS } from \"./vars\"\n\nclass DimensionsWidget extends Component {\n    sectionName = SECTION_NAMES.dimensions\n    state = { isFine: true }\n\n    reset = () => this.props.onUpdate(\"dimensions\", { dimensions: DEFAULT_DIMENSIONS })\n\n    toggleMode = () => this.setState({ isFine: !this.state.isFine })\n\n    updateFieldState = (name, value) => this.updateDimensions(name, value)\n\n    updateDimensions = (name, value) => {\n        const dimensions = { ...this.props.params.dimensions, [name]: value }\n        this.props.onUpdate(\"dimensions\", { dimensions })\n    }\n\n    get toggleSwitch() {\n        const props = {\n            id: \"DimensionsWidgetSwitch\",\n            value: this.state.isFine ? \"1x\" : \"5x\",\n            handleChange: this.toggleMode,\n            showValue: true,\n        }\n\n        return <ToggleSwitch {...props} />\n    }\n\n    get NumberInputFields() {\n        const { minVal, maxVal } = RANGE_PARAMS.dimensionInputs\n        const stepVal = this.state.isFine ? 1 : 5\n        const dimensions = this.props.params.dimensions\n\n        const numberInputFields = DIMENSION_NAMES.map(name => {\n            const props = {\n                name,\n                value: dimensions[name],\n                rangeParams: { minVal, maxVal, stepVal },\n                handleChange: this.updateFieldState,\n            }\n\n            return <NumberInputField {...props} key={name} />\n        })\n\n        return <div className=\"grid-cols-6\">{numberInputFields}</div>\n    }\n\n    render = () => (\n        <Card title={<h2>{this.sectionName}</h2>} other={this.toggleSwitch}>\n            {this.NumberInputFields}\n            <ResetButton reset={this.reset} />\n        </Card>\n    )\n}\n\nexport default DimensionsWidget\n","import React from \"react\"\nimport { RANGE_PARAMS } from \"../vars\"\n/* *\n *\n * ................\n * props of Slider component:\n * ................\n *   name: Label of the slider\n *   attributes: [minimum, maximum, step]\n *   value: current value (to be displayed)\n *   handleChange: callback to call when slider changes\n *\n * */\nconst Slider = ({ name, id, value, rangeParams, handleChange }) => (\n    <div className=\"slider-container\">\n        <div className=\"label\">\n            <label htmlFor={id || name}>{name}</label>: <span>{value}</span>\n        </div>\n        <input\n            type=\"range\"\n            id={id || name}\n            min={rangeParams.minVal}\n            max={rangeParams.maxVal}\n            step={rangeParams.stepVal}\n            value={value}\n            onChange={e => handleChange(name, e.target.value)}\n            className=\"slider\"\n        />\n    </div>\n)\n\nconst sliderList = ({ names, values, handleChange, rangeParams }) =>\n    names.map(name => (\n        <Slider\n            key={name}\n            name={name}\n            rangeParams={rangeParams ? rangeParams[name] : RANGE_PARAMS[name]}\n            handleChange={handleChange}\n            value={values[name]}\n        />\n    ))\n\nexport { Slider, sliderList }\n","import React, { Component } from \"react\"\nimport { Card } from \"../generic\"\nimport { ANGLE_NAMES, RANGE_PARAMS } from \"../vars\"\n\nclass LegPoseWidget extends Component {\n    updateFieldState = (angle, value) => {\n        const numberValue = Number(value)\n        if (!isNaN(numberValue)) {\n            this.props.onUpdate(this.props.name, angle, numberValue)\n        }\n    }\n\n    fields = Component => {\n        return ANGLE_NAMES.map(angle => {\n            const id = `${this.props.name}-${angle}`\n            const props = {\n                id,\n                name: angle,\n                key: id,\n                value: this.props.pose[angle],\n                rangeParams: RANGE_PARAMS[angle],\n                handleChange: this.updateFieldState,\n            }\n\n            return <Component {...props} />\n        })\n    }\n\n    render = () => (\n        <Card title={<h3>{this.props.name}</h3>}>\n            <div className={this.props.renderStacked ? \"grid-cols-1\" : \"grid-cols-3\"}>\n                {this.fields(this.props.WidgetType)}\n            </div>\n        </Card>\n    )\n}\n\nexport default LegPoseWidget\n","import React, { Component } from \"react\"\nimport LegPoseWidget from \"../pagePartials/LegPoseWidgets\"\nimport { Card, ToggleSwitch, ResetButton, NumberInputField, Slider } from \"../generic\"\nimport { DEFAULT_POSE } from \"../../templates\"\nimport { SECTION_NAMES, LEG_NAMES } from \"../vars\"\n\nclass ForwardKinematicsPage extends Component {\n    pageName = SECTION_NAMES.forwardKinematics\n    state = { WidgetType: NumberInputField }\n\n    componentDidMount = () => this.props.onMount(this.pageName)\n\n    reset = () => this.props.onUpdate(\"pose\", { pose: DEFAULT_POSE })\n\n    updatePose = (name, angle, value) => {\n        const pose = this.props.params.pose\n        const newPose = {\n            ...pose,\n            [name]: { ...pose[name], [angle]: value },\n        }\n        this.props.onUpdate(\"pose\", { pose: newPose })\n    }\n\n    toggleMode = () => {\n        const WidgetType = this.state.WidgetType === Slider ? NumberInputField : Slider\n        this.setState({ WidgetType })\n    }\n\n    legPoseWidget = name => (\n        <LegPoseWidget\n            key={name}\n            name={name}\n            pose={this.props.params.pose[name]}\n            onUpdate={this.updatePose}\n            WidgetType={this.state.WidgetType}\n            renderStacked={this.state.WidgetType === Slider}\n        />\n    )\n\n    get toggleSwitch() {\n        const props = {\n            id: \"FwdKinematicsSwitch\",\n            value: this.state.WidgetType === Slider ? \"Slide\" : \"Input\",\n            handleChange: this.toggleMode,\n            showValue: true,\n        }\n\n        return <ToggleSwitch {...props} />\n    }\n\n    render = () => (\n        <Card title={<h2>{this.pageName}</h2>} other={this.toggleSwitch}>\n            <div className=\"grid-cols-2\">\n                {LEG_NAMES.map(name => this.legPoseWidget(name))}\n            </div>\n            <ResetButton reset={this.reset} />\n        </Card>\n    )\n}\n\nexport default ForwardKinematicsPage\n","import React from \"react\"\nimport { POSITION_NAMES_LIST } from \"hexapod-kinematics-library\"\n\nconst POSITION_ALIAS = {\n    rightMiddle: \"rm\",\n    rightFront: \"rf\",\n    leftFront: \"lf\",\n    leftMiddle: \"lm\",\n    leftBack: \"lb\",\n    rightBack: \"rb\",\n}\n\nconst formatPose = pose =>\n    POSITION_NAMES_LIST.reduce((formattedPose, position) => {\n        const alias = POSITION_ALIAS[position]\n        const { alpha, beta, gamma } = pose[position]\n        formattedPose[alias] = {\n            alpha: Number(alpha).toFixed(2),\n            beta: Number(beta).toFixed(2),\n            gamma: Number(gamma).toFixed(2),\n        }\n        return formattedPose\n    }, {})\n\nconst PoseTable = ({ rm, rf, lf, lm, lb, rb }) => (\n    <table>\n        <thead>\n            <tr>\n                <th>POSITION</th>\n                <th>ALPHA</th>\n                <th>BETA</th>\n                <th>GAMMA</th>\n            </tr>\n        </thead>\n        <tbody>\n            <TableRow label=\"rightMiddle\" leg={rm} />\n            <TableRow label=\"rightFront\" leg={rf} />\n            <TableRow label=\"leftFront\" leg={lf} />\n            <TableRow label=\"leftMiddle\" leg={lm} />\n            <TableRow label=\"leftBack\" leg={lb} />\n            <TableRow label=\"rightBack\" leg={rb} />\n        </tbody>\n    </table>\n)\n\nconst TableRow = ({ label, leg }) => (\n    <tr>\n        <td>{label}</td>\n        <td>{leg.alpha}</td>\n        <td>{leg.beta}</td>\n        <td>{leg.gamma}</td>\n    </tr>\n)\n\nconst poseTable = ({ pose }) => {\n    const props = formatPose(pose)\n    return (\n        <div className=\"table-container\">\n            <PoseTable {...props} />\n        </div>\n    )\n}\n\nexport default poseTable\n","import React, { Component } from \"react\"\nimport { sliderList, Card, ResetButton, AlertBox } from \"../generic\"\nimport { solveInverseKinematics } from \"hexapod-kinematics-library\"\nimport { SECTION_NAMES, IK_SLIDERS_LABELS } from \"../vars\"\nimport { DEFAULT_IK_PARAMS } from \"../../templates\"\nimport PoseTable from \"../pagePartials/PoseTable\"\n\nclass InverseKinematicsPage extends Component {\n    pageName = SECTION_NAMES.inverseKinematics\n    state = { ikParams: DEFAULT_IK_PARAMS, errorMessage: null }\n\n    componentDidMount = () => this.props.onMount(this.pageName)\n\n    reset = () => {\n        const result = solveInverseKinematics(\n            this.props.params.dimensions,\n            DEFAULT_IK_PARAMS\n        )\n        this.updateHexapodPlot(result.hexapod, DEFAULT_IK_PARAMS)\n    }\n\n    updateHexapodPlot = (hexapod, ikParams) => {\n        this.setState({ ikParams, errorMessage: null })\n        this.props.onUpdate(\"hexapod\", { hexapod })\n    }\n\n    updateIkParams = (name, value) => {\n        const ikParams = { ...this.state.ikParams, [name]: value }\n        const result = solveInverseKinematics(this.props.params.dimensions, ikParams)\n\n        if (!result.obtainedSolution) {\n            this.props.onUpdate(\"hexapod\", { hexapod: null })\n            this.setState({ errorMessage: result.message })\n            return\n        }\n\n        this.updateHexapodPlot(result.hexapod, ikParams)\n    }\n\n    get sliders() {\n        return sliderList({\n            names: IK_SLIDERS_LABELS,\n            values: this.state.ikParams,\n            handleChange: this.updateIkParams,\n        })\n    }\n\n    get additionalInfo() {\n        if (this.state.errorMessage) {\n            return <AlertBox info={this.state.errorMessage} />\n        }\n\n        return <PoseTable pose={this.props.params.pose} />\n    }\n\n    render = () => (\n        <Card title={<h2>{this.pageName}</h2>}>\n            <div className=\"grid-cols-3\">{this.sliders.slice(0, 6)}</div>\n            <div className=\"grid-cols-2\">{this.sliders.slice(6, 8)}</div>\n            <ResetButton reset={this.reset} />\n            {this.additionalInfo}\n        </Card>\n    )\n}\n\nexport default InverseKinematicsPage\n","import React, { Suspense } from \"react\"\n\nconst MinimumRandomRobotGif = React.lazy(() => import(\"./MinimumRandomRobotGif\"))\n\nconst RandomRobotGif = () => (\n    <div style={{ height: \"80px\" }}>\n        <Suspense fallback={<p>A cute random robot will soon appear!</p>}>\n            <MinimumRandomRobotGif />\n        </Suspense>\n    </div>\n)\n\nexport default RandomRobotGif\n","import React from \"react\"\nimport { SECTION_NAMES } from \"../vars\"\nimport RandomRobotGif from \"../pagePartials/RandomRobotGif\"\n\nclass LandingPage extends React.Component {\n    pageName = SECTION_NAMES.landingPage\n\n    componentDidMount = () => this.props.onMount(this.pageName)\n\n    render = () => (\n        <>\n            <div id=\"landing\">\n                <RandomRobotGif />\n            </div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { Component } from \"react\"\nimport { sliderList, Card, ResetButton } from \"../generic\"\nimport { DEFAULT_POSE, DEFAULT_PATTERN_PARAMS } from \"../../templates\"\nimport { SECTION_NAMES, ANGLE_NAMES } from \"../vars\"\n\nclass LegPatternPage extends Component {\n    pageName = SECTION_NAMES.legPatterns\n    state = { patternParams: DEFAULT_PATTERN_PARAMS }\n\n    componentDidMount = () => {\n        this.props.onMount(this.pageName)\n        this.reset()\n    }\n\n    reset = () => {\n        this.props.onUpdate(\"pose\", { pose: DEFAULT_POSE })\n        this.setState({ patternParams: DEFAULT_PATTERN_PARAMS })\n    }\n\n    updatePatternPose = (name, value) => {\n        const patternParams = { ...this.state.patternParams, [name]: Number(value) }\n        let newPose = {}\n\n        for (const leg in DEFAULT_POSE) {\n            newPose[leg] = patternParams\n        }\n\n        this.props.onUpdate(\"pose\", { pose: newPose })\n        this.setState({ patternParams })\n    }\n\n    get sliders() {\n        return sliderList({\n            names: ANGLE_NAMES,\n            values: this.state.patternParams,\n            handleChange: this.updatePatternPose,\n        })\n    }\n\n    render = () => (\n        <Card title={<h2>{this.pageName}</h2>}>\n            <div className=\"grid-cols-1\">{this.sliders}</div>\n            <ResetButton reset={this.reset} />\n        </Card>\n    )\n}\n\nexport default LegPatternPage\n","import React, { Component } from \"react\"\nimport { sliderList, Card, ResetButton, ToggleSwitch } from \"../generic\"\nimport { SECTION_NAMES, GAIT_SLIDER_LABELS, GAIT_RANGE_PARAMS } from \"../vars\"\nimport PoseTable from \"../pagePartials/PoseTable\"\nimport { tRotZmatrix, VirtualHexapod, getWalkSequence } from \"hexapod-kinematics-library\"\nimport { DEFAULT_GAIT_PARAMS } from \"../../templates\"\n\nconst ANIMATION_DELAY = 25\n\nconst getPose = (sequences, i) => {\n    return Object.keys(sequences).reduce((newSequences, legPosition) => {\n        const { alpha, beta, gamma } = sequences[legPosition]\n        newSequences[legPosition] = { alpha: alpha[i], beta: beta[i], gamma: gamma[i] }\n        return newSequences\n    }, {})\n}\n\nconst newSwitch = (id, value, handleChange) => (\n    <ToggleSwitch id={id} handleChange={handleChange} value={value} showValue={true} />\n)\n\nconst switches = (switch1, switch2, switch3) => (\n    <div className=\"grid-cols-3\" style={{ paddingBottom: \"20px\" }}>\n        {switch1}\n        {switch2}\n        {switch3}\n    </div>\n)\n\nconst countSteps = sequence => sequence[\"leftMiddle\"].alpha.length\n\nclass WalkingGaitsPage extends Component {\n    pageName = SECTION_NAMES.walkingGaits\n    currentTwist = 0\n    walkSequence = null\n    state = {\n        gaitParams: DEFAULT_GAIT_PARAMS,\n        isAnimating: false,\n        isTripodGait: true,\n        isForward: true,\n        inWalkMode: true,\n        showGaitWidgets: true,\n        animationCount: 0,\n    }\n\n    componentDidMount = () => {\n        this.props.onMount(this.pageName)\n        const { isTripodGait, inWalkMode } = this.state\n        this.setWalkSequence(DEFAULT_GAIT_PARAMS, isTripodGait, inWalkMode)\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.intervalID)\n    }\n\n    animate = () => {\n        const { isForward, inWalkMode } = this.state\n\n        const stepCount = countSteps(this.walkSequence)\n        const animationCount = (this.state.animationCount + 1) % stepCount\n        this.setState({ animationCount })\n\n        const tempStep = isForward ? animationCount : stepCount - animationCount\n        const step = Math.max(0, Math.min(stepCount - 1, tempStep))\n\n        const pose = getPose(this.walkSequence, step)\n\n        if (inWalkMode) {\n            this.onUpdate(pose, this.currentTwist)\n            return\n        }\n\n        const deltaTwist = (this.state.gaitParams.hipSwing * 2) / stepCount\n        const twist = isForward\n            ? (this.currentTwist + deltaTwist) % 360\n            : (this.currentTwist - deltaTwist) % 360\n\n        this.onUpdate(pose, twist)\n    }\n\n    onUpdate = (pose, currentTwist) => {\n        this.currentTwist = currentTwist\n\n        const { dimensions } = this.props.params\n        const hexapod = new VirtualHexapod(dimensions, pose, { wontRotate: true })\n\n        // ❗❗️HACK When we've passed undefined pose values for some reason\n        if (!hexapod || !hexapod.body) {\n            return\n        }\n\n        const matrix = tRotZmatrix(currentTwist)\n        this.props.onUpdate(\"hexapod\", { hexapod: hexapod.cloneTrot(matrix) })\n    }\n\n    setWalkSequence = (gaitParams, isTripodGait, inWalkMode) => {\n        const gaitType = isTripodGait ? \"tripod\" : \"ripple\"\n        const walkMode = inWalkMode ? \"walking\" : \"rotating\"\n\n        const { dimensions } = this.props.params\n        const { animationCount } = this.state\n\n        this.walkSequence =\n            getWalkSequence(dimensions, gaitParams, gaitType, walkMode) ||\n            this.walkSequence\n\n        const pose = getPose(this.walkSequence, animationCount)\n        this.onUpdate(pose, this.currentTwist)\n        this.setState({ gaitParams, isTripodGait, inWalkMode })\n    }\n\n    reset = () => {\n        const { isTripodGait, inWalkMode } = this.state\n        this.currentTwist = 0\n        this.setWalkSequence(DEFAULT_GAIT_PARAMS, isTripodGait, inWalkMode)\n    }\n\n    updateGaitParams = (name, value) => {\n        const { isTripodGait, inWalkMode } = this.state\n        const gaitParams = { ...this.state.gaitParams, [name]: value }\n        this.setWalkSequence(gaitParams, isTripodGait, inWalkMode)\n    }\n\n    toggleWalkMode = () => {\n        const { gaitParams, isTripodGait } = this.state\n        const inWalkMode = !this.state.inWalkMode\n        this.setWalkSequence(gaitParams, isTripodGait, inWalkMode)\n    }\n\n    toggleGaitType = () => {\n        const { gaitParams, inWalkMode } = this.state\n        const isTripodGait = !this.state.isTripodGait\n        this.setWalkSequence(gaitParams, isTripodGait, inWalkMode)\n    }\n\n    toggleWidgets = () => this.setState({ showGaitWidgets: !this.state.showGaitWidgets })\n\n    toggleDirection = () => this.setState({ isForward: !this.state.isForward })\n\n    toggleAnimating = () => {\n        const isAnimating = !this.state.isAnimating\n        this.setState({ isAnimating })\n\n        if (isAnimating) {\n            this.intervalID = setInterval(this.animate, ANIMATION_DELAY)\n        } else {\n            clearInterval(this.intervalID)\n        }\n    }\n\n    get widgetsSwitch() {\n        const value = this.state.showGaitWidgets ? \"controlsShown\" : \"poseShown\"\n        return newSwitch(\"widgetSw\", value, this.toggleWidgets)\n    }\n\n    get animatingSwitch() {\n        const value = this.state.isAnimating ? \"PLAYING...\" : \"...PAUSED. \"\n        return newSwitch(\"animatingSw\", value, this.toggleAnimating)\n    }\n\n    get gaitTypeSwitch() {\n        const value = this.state.isTripodGait ? \"tripodGait\" : \"rippleGait\"\n        return newSwitch(\"gaitSw\", value, this.toggleGaitType)\n    }\n\n    get directionSwitch() {\n        const value = this.state.isForward ? \"isForward\" : \"isBackward\"\n        return newSwitch(\"directionSw\", value, this.toggleDirection)\n    }\n\n    get rotateSwitch() {\n        const value = this.state.inWalkMode ? \"isWalk\" : \"isRotate\"\n        return newSwitch(\"rotateSw\", value, this.toggleWalkMode)\n    }\n\n    get sliders() {\n        const sliders = sliderList({\n            names: GAIT_SLIDER_LABELS,\n            values: this.state.gaitParams,\n            rangeParams: GAIT_RANGE_PARAMS,\n            handleChange: this.updateGaitParams,\n        })\n\n        return <div className=\"grid-cols-2\">{sliders}</div>\n    }\n\n    get animationCount() {\n        const { isAnimating, animationCount } = this.state\n        return (\n            <div className=\"text\" hidden={!isAnimating}>\n                {animationCount}\n            </div>\n        )\n    }\n\n    render() {\n        const animationControlSwitches = switches(\n            this.animatingSwitch,\n            this.widgetsSwitch\n        )\n        const gaitControlSwitches = switches(\n            this.gaitTypeSwitch,\n            this.directionSwitch,\n            this.rotateSwitch\n        )\n\n        const { showGaitWidgets } = this.state\n        const { pose } = this.props.params\n\n        return (\n            <Card title={<h2>{this.pageName}</h2>} other={this.animationCount}>\n                {animationControlSwitches}\n\n                <div hidden={!showGaitWidgets}>\n                    {gaitControlSwitches}\n                    {this.sliders}\n                    <ResetButton reset={this.reset} />\n                </div>\n\n                <div hidden={showGaitWidgets}>\n                    <PoseTable pose={pose} />\n                </div>\n            </Card>\n        )\n    }\n}\n\nexport default WalkingGaitsPage\n","import React from \"react\"\nimport { Route, Switch, Redirect } from \"react-router-dom\"\nimport { PATHS } from \"./components/vars\"\nimport * as defaults from \"./templates\"\nimport { VirtualHexapod } from \"hexapod-kinematics-library\"\nimport {\n    InverseKinematicsPage,\n    WalkingGaitsPage,\n    ForwardKinematicsPage,\n    LegPatternPage,\n    LandingPage,\n} from \"./components/pages\"\n\nconst Page = ({ pageComponent }) => (\n    <Switch>\n        <Route path=\"/\" exact>\n            {pageComponent(LandingPage)}\n        </Route>\n        <Route path={PATHS.legPatterns.path} exact>\n            {pageComponent(LegPatternPage)}\n        </Route>\n        <Route path={PATHS.forwardKinematics.path} exact>\n            {pageComponent(ForwardKinematicsPage)}\n        </Route>\n        <Route path={PATHS.inverseKinematics.path} exact>\n            {pageComponent(InverseKinematicsPage)}\n        </Route>\n        <Route path={PATHS.walkingGaits.path} exact>\n            {pageComponent(WalkingGaitsPage)}\n        </Route>\n        <Route>\n            <Redirect to=\"/\" />\n        </Route>\n    </Switch>\n)\n\nconst updateHexapod = (updateType, newParam, oldHexapod) => {\n    if (updateType === \"default\") {\n        return new VirtualHexapod(defaults.DEFAULT_DIMENSIONS, defaults.DEFAULT_POSE)\n    }\n\n    let hexapod = null\n    const { pose, dimensions } = oldHexapod\n\n    if (updateType === \"pose\") {\n        hexapod = new VirtualHexapod(dimensions, newParam.pose)\n    }\n\n    if (updateType === \"dimensions\") {\n        hexapod = new VirtualHexapod(newParam.dimensions, pose)\n    }\n\n    if (updateType === \"hexapod\") {\n        hexapod = newParam.hexapod\n    }\n\n    if (!hexapod || !hexapod.foundSolution) {\n        return oldHexapod\n    }\n\n    return hexapod\n}\n\nexport { Page, updateHexapod }\n","const LEG_POSITIONS = [\n    \"leftFront\",\n    \"rightFront\",\n    \"leftMiddle\",\n    \"rightMiddle\",\n    \"leftBack\",\n    \"rightBack\",\n]\n\nconst LEFT_LEGS = [\"leftFront\", \"leftMiddle\", \"leftBack\"]\n\nconst clean = (x, shouldInvert) => {\n    let directed = shouldInvert ? -1 * x : x\n    return Math.max(Math.min(Math.round(directed) + 90, 180), 0)\n}\n\nconst transformPose = pose => {\n    let newPose = {}\n\n    for (let leg of LEG_POSITIONS) {\n        const { alpha, beta, gamma } = pose[leg]\n        const isLeft = LEFT_LEGS.includes(leg)\n        newPose[leg] = {\n            alpha: clean(alpha, true),\n            beta: clean(beta, isLeft),\n            gamma: clean(gamma, !isLeft),\n        }\n    }\n\n    return newPose\n}\n\nexport default transformPose\n","import { useState, useEffect, useCallback, useRef } from \"react\"\nimport socketIOClient from \"socket.io-client\"\nimport {\n    SOCKET_SERVER_URL,\n    MINIMUM_TIME_BETWEEN_MESSAGES,\n    CLIENT_SENDER_NAME,\n    CHANNEL_NAME,\n} from \"./_VAR_CONFIG\"\n\nimport transformPose from \"./_TRANSFORM\"\n\nconst useSendPose = () => {\n    const socketRef = useRef()\n    const [lastDate, setLastDate] = useState(() => new Date())\n    // delta date is the interval between the last two messages sent\n    const [deltaDate, setDeltaDate] = useState(0)\n\n    useEffect(() => {\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL)\n        return () => socketRef.current.disconnect()\n    }, [])\n\n    const sendPose = useCallback(\n        pose => {\n            const currentDate = new Date()\n            const newDeltaDate = currentDate - lastDate\n\n            // we shouldn't spam the robot with commands\n            if (newDeltaDate < MINIMUM_TIME_BETWEEN_MESSAGES) {\n                console.log(\"too soon: \", newDeltaDate)\n                return\n            }\n\n            console.log(\"just right: \", newDeltaDate)\n\n            socketRef.current.emit(CHANNEL_NAME, {\n                pose: transformPose(pose),\n                sender: CLIENT_SENDER_NAME,\n                time: currentDate.getTime(),\n            })\n\n            setLastDate(currentDate)\n            setDeltaDate(newDeltaDate)\n        },\n        [lastDate]\n    )\n\n    return [sendPose, deltaDate]\n}\n\nexport default useSendPose\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { DEFAULT_POSE } from \"./templates\"\nimport { SECTION_NAMES } from \"./components/vars\"\nimport { Nav, NavDetailed, DimensionsWidget } from \"./components\"\nimport { updateHexapod, Page } from \"./AppHelpers\"\nimport HexapodPlot from \"./components/HexapodPlot\"\nimport useSendPose from \"./_HOOK\"\n\nconst App = () => {\n    const [pageName, setPageName] = useState(SECTION_NAMES.landingPage)\n    const [hexapod, setHexapod] = useState(() => updateHexapod(\"default\"))\n    const [revision, setRevision] = useState(0)\n    const inHexapodPage = pageName !== SECTION_NAMES.landingPage\n    const [sendPose, deltaDate] = useSendPose()\n\n    useEffect(() => sendPose(hexapod.pose), [hexapod, sendPose])\n\n    const manageState = useCallback((updateType, newParam) => {\n        setRevision(r => r + 1)\n        setHexapod(h => updateHexapod(updateType, newParam, h))\n    }, [])\n\n    useEffect(() => {\n        document.title = pageName + \"Hexapod Robot Simulator\"\n        manageState(\"pose\", { pose: DEFAULT_POSE })\n    }, [pageName, manageState])\n\n    const pageComponent = useCallback(\n        Component => (\n            <Component\n                onMount={newPageName => setPageName(newPageName)}\n                onUpdate={manageState}\n                params={{\n                    dimensions: hexapod.dimensions,\n                    pose: hexapod.pose,\n                }}\n            />\n        ),\n        [manageState, hexapod]\n    )\n\n    return (\n        <Router>\n            <Nav />\n            <div id=\"main\">\n                <div id=\"sidebar\">\n                    <div hidden={!inHexapodPage}>\n                        <DimensionsWidget\n                            params={{ dimensions: hexapod.dimensions }}\n                            onUpdate={manageState}\n                        />\n                    </div>\n                    <Page pageComponent={pageComponent} />\n                    <p> deltaDate: {deltaDate} </p>\n                    {!inHexapodPage ? <NavDetailed /> : null}\n                </div>\n                <div id=\"plot\" className=\"border\" hidden={!inHexapodPage}>\n                    <HexapodPlot revision={revision} hexapod={hexapod} />\n                </div>\n            </div>\n            {inHexapodPage ? <NavDetailed /> : null}\n        </Router>\n    )\n}\n\nexport default App\n","// the channel where the client sends command, and the server receives commands\nconst CHANNEL_NAME = \"setServo\"\n\n// the port / url where the server listens for commands from clients (clients like our react app)\nconst SOCKET_SERVER_PORT = 4001\nconst SOCKET_SERVER_URL = `http://127.0.0.1:${SOCKET_SERVER_PORT}`\n\n// client urls that are allowed to connect with our robot\nconst SOCKET_CLIENT_URLS = [\"http://localhost:5000\", \"http://192.168.254.105:5000\"]\n\n// we don't want to spam too many commands to our robot\n// (in milliseconds)\nconst MINIMUM_TIME_BETWEEN_MESSAGES = 20\n\n// the client app should send its name to the server\n// so that the server knows immediately where the command is coming from\n// for information purpose only, should NOT be used for security purposes\nconst CLIENT_SENDER_NAME = \"react-app\"\n\nmodule.exports = {\n    SOCKET_CLIENT_URLS,\n    SOCKET_SERVER_PORT,\n    SOCKET_SERVER_URL,\n    MINIMUM_TIME_BETWEEN_MESSAGES,\n    CLIENT_SENDER_NAME,\n    CHANNEL_NAME,\n}\n"],"sourceRoot":""}